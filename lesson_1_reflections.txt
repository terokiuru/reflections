How did viewing a diff between two versions of a file help
you see the bug that was introduced?
Answer: I don't remember that exercise anymore :)

How could having easy access to the entire history of a
file make you a more efficient programmer in the long term?
Answer: It's easier to find bugs when you can check a previous
working version.

What do you think are the pros and cons of manually choosing
when to create a commit, like you do in Git, vs having
versions automatically saved, like Google Docs does?
Answer: Automatical committing could save versions which
do not work. On the other hand there would certainly 
always be saved versions even if user keeps forgetting.

Why do you think some version control systems, like Git,
allow saving multiple files in one commit, while others,
like Google Docs, treat each file separately?
Answer: When saving files including code, it makes
sense to save all files related to a specific project
at all times.

How can you use the commands git log and git diff 
to view the history of files?
Answer: log gives you all the commits with 
their IDs and diff compares to commits.

How might using version control make you more
confident to make changes that could break something?
Answer: I know that I can always go back to the 
working version of the code.

Now that you have your workspace set up, what do 
you want to try using Git for?
Answer: I want to start using version control with my Android programming